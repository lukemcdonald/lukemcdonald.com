---
import type { ExperienceItem } from '@/features/resume/resume.types'

import ExperienceIcon from '@lucide/astro/icons/shield-ellipsis'

import Link from '@/components/Link.astro'
import Section from '@/features/resume/components/ui/Section.astro'
import { formatMonthYear } from '@/utils/dates'

export interface Props {
  experience: ExperienceItem[]
}

const { experience } = Astro.props
---

<Section
  title="Experience"
  items={experience}
  icon={ExperienceIcon}
>
  <template slot="item">
    {
      (item: ExperienceItem) => (
        <div class="mt-8">
          <dl class="not-prose flex flex-auto flex-wrap items-baseline gap-x-1 text-primary-900 dark:text-primary-100">
            <dt class="sr-only">Role</dt>
            <dd class="font-semibold">{item.position}</dd>
            <dt class="sr-only">Company</dt>
            <dd class="flex-none">
              @{' '}
              {item.website ?
                <Link
                  underline="always"
                  href={item.website}
                >
                  {item.company}
                </Link>
              : item.company}
            </dd>
            <dt class="sr-only">Date</dt>
            <dd
              class="my-0 ml-1 text-sm text-primary-600 md:ml-auto dark:text-primary-400"
              aria-label={`${formatMonthYear(item.startDate) || item.startDate || 'Unknown start date'} until ${formatMonthYear(item.endDate) || 'Present'}`}
            >
              <time datetime={item.startDate}>
                {formatMonthYear(item.startDate) || item.startDate || 'Unknown start date'}
              </time>
              <span aria-hidden="true">&nbsp;â€“&nbsp;</span>
              {item.endDate ?
                <time datetime={item.endDate}>{formatMonthYear(item.endDate) || item.endDate}</time>
              : <span>Present</span>}
            </dd>
          </dl>

          {item.summary && <p class="mt-2">{item.summary}</p>}

          {item.highlights && (
            <ul>
              {item.highlights.map((highlight: string) => (
                <li>{highlight}</li>
              ))}
            </ul>
          )}
        </div>
      )
    }
  </template>
</Section>

---
import type { Icon as IconType } from '@lucide/astro/icons'
import type { HTMLAttributes } from 'astro/types'

interface Props extends HTMLAttributes<'section'> {
  icon?: typeof IconType
  iconClass?: string
  iconSize?: number | string
  items: unknown[]
  itemsClass?: string
  title: string
}

const { icon: Icon, items, itemsClass, title, ...delegated } = Astro.props

const hasItems = Array.isArray(items) && items.length > 0
const hasItemSlot = Astro.slots.has('item')

let renderedItemSlots: string[] = []
if (hasItems && hasItemSlot) {
  renderedItemSlots = await Promise.all(
    items.map((item, index) => Astro.slots.render('item', [item, index])),
  )
}
---

<section {...delegated}>
  <header>
    <h2 class="flex items-center gap-2">
      {Icon && <Icon class:list={['text-primary-900/90 print:hidden']} />}
      {title}
    </h2>
  </header>

  {
    hasItems && (
      <ul class:list={['list-none px-0', itemsClass]}>
        {hasItemSlot &&
          renderedItemSlots.map((html) => (
            <li
              class="p-0"
              set:html={html}
            />
          ))}
        {!hasItemSlot &&
          items.map((item) => (
            <li
              class="p-0"
              set:html={String(item)}
            />
          ))}
      </ul>
    )
  }
</section>

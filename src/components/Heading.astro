---
import type { HTMLAttributes } from 'astro/types'

type HeadingTag = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'

const colors = {
  primary: 'text-primary-900',
  secondary: 'text-primary-800',
}

const sizes = {
  sm: 'text-sm',
  md: 'text-base',
  lg: 'text-lg',
  xl: 'text-xl',
  '2xl': 'text-2xl',
  '3xl': 'text-3xl',
  '4xl': 'text-4xl',
  '5xl': 'text-5xl',
  '6xl': 'text-6xl',
}

const weights = {
  normal: 'font-normal',
  medium: 'font-medium',
  semibold: 'font-semibold',
  bold: 'font-bold',
}

interface Props extends HTMLAttributes<HeadingTag> {
  as?: HeadingTag
  color?: keyof typeof colors
  size?: keyof typeof sizes
  weight?: keyof typeof weights
}

const {
  as: Component = 'h2',
  color = 'primary',
  size = 'xl',
  weight = 'semibold',
  ...delegated
} = Astro.props satisfies Props
---

<Component
  class:list={[sizes[size], weights[weight], colors[color]]}
  {...delegated}
>
  <slot />
</Component>

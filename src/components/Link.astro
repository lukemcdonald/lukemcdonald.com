---
import type { HTMLAttributes } from 'astro/types'

const {
  color = 'inherit',
  href,
  size = 'inherit',
  target,
  truncate,
  underline = 'auto',
  variant = 'text',
  weight = 'normal',
  wrap = 'wrap',
  ...delegated
} = Astro.props satisfies Props

const colors = {
  inherit: 'text-inherit',
  primary: 'text-primary-500',
}

const sizes = {
  '2xl': 'text-2xl',
  '3xl': 'text-3xl',
  '4xl': 'text-4xl',
  '5xl': 'text-5xl',
  '6xl': 'text-6xl',
  inherit: '',
  lg: 'text-lg',
  md: 'text-base',
  sm: 'text-sm',
  xl: 'text-xl',
}

const baseUnderline =
  'underline-offset-2 transition-all decoration-primary-500 hover:decoration-inherit'
const underlines = {
  always: `${baseUnderline} underline`,
  auto: baseUnderline,
  hover: `no-underline ${baseUnderline} hover:underline`,
  none: `no-underline`,
}

const weights = {
  bold: 'font-semibold',
  light: 'font-light',
  medium: 'font-medium',
  normal: 'font-normal',
}

const wraps = {
  balance: 'text-balance',
  nowrap: 'text-nowrap',
  pretty: 'text-pretty',
  wrap: 'text-wrap',
}

const variants = {
  icon: `${underlines.none}`,
  text: '',
}

interface Props extends HTMLAttributes<'a'> {
  color?: keyof typeof colors
  size?: keyof typeof sizes
  truncate?: boolean
  underline?: keyof typeof underlines
  underlineColor?: string
  variant?: keyof typeof variants
  weight?: keyof typeof weights
  wrap?: keyof typeof wraps
}
---

<a
  class:list={[
    colors[color],
    sizes[size],
    truncate && 'truncate',
    underlines[underline],
    variants[variant],
    weights[weight],
    wraps[wrap],
    delegated.class,
  ]}
  href={href}
  target={target}
  rel={target === '_blank' ? 'noopener noreferrer' : undefined}
  {...delegated}
>
  <slot />
</a>

---
import type { SeoMeta } from '@/utils/seo'

import { ClientRouter } from 'astro:transitions'

import PostHog from '@/components/PostHog.astro'
import { GLOBAL_CONFIG, IS_PROD } from '@/configs/global'
import { buildGraphJsonLd, buildSocialMetaTags } from '@/utils/seo'
import { stripHtmlAndTruncate } from '@/utils/text'

export interface Props {
  generator?: string
  meta: SeoMeta
}

const { generator, meta } = Astro.props
const {
  author,
  canonicalUrl,
  description: inDescription,
  modDatetime,
  pubDatetime,
  title: inTitle,
} = meta

const siteNameLower = GLOBAL_CONFIG.name.trim().toLowerCase()
const providedTitleLower = (inTitle ?? '').trim().toLowerCase()
const title = providedTitleLower.includes(siteNameLower)
  ? inTitle
  : `${inTitle} - ${GLOBAL_CONFIG.name}`

// Clean and optimize the description for meta tags
const description = stripHtmlAndTruncate(inDescription, 160, '...')

// Create JSON-LD graph ([WebSite, Page]) and social meta tags
const metaForSeo: SeoMeta = { ...meta, description }
const structuredData = buildGraphJsonLd(metaForSeo)
const socialMetaTags = buildSocialMetaTags(metaForSeo)
---

<head>
  <!-- Basic HTML Head Elements -->
  <meta charset="UTF-8" />
  <meta
    name="viewport"
    content="width=device-width,initial-scale=1"
  />
  <meta
    name="googlebot"
    content="index, follow"
  />
  <meta
    name="robots"
    content="index, follow, max-image-preview:large"
  />

  <!-- Favicon -->
  <link
    href="/favicon.svg"
    rel="icon"
    type="image/svg+xml"
  />
  <link
    href="/apple-touch-icon.png"
    rel="apple-touch-icon"
  />

  <!-- Sitemap -->
  <link
    rel="sitemap"
    href="/sitemap-index.xml"
  />

  <!-- General Meta Tags -->
  <title>{title}</title>
  <link
    rel="canonical"
    href={canonicalUrl}
  />
  {
    description && (
      <meta
        name="description"
        content={description}
      />
    )
  }
  {
    author?.name && (
      <meta
        name="author"
        content={author.name}
      />
    )
  }
  {
    generator && (
      <meta
        name="generator"
        content={generator}
      />
    )
  }

  <!-- Article Published/Modified time -->
  {
    pubDatetime && (
      <meta
        property="article:published_time"
        content={pubDatetime.toISOString()}
      />
    )
  }
  {
    modDatetime && (
      <meta
        property="article:modified_time"
        content={modDatetime.toISOString()}
      />
    )
  }

  <!-- Open Graph / Facebook -->
  <meta
    property="og:title"
    content={socialMetaTags['og:title']}
  />
  <meta
    property="og:url"
    content={socialMetaTags['og:url']}
  />
  <meta
    property="og:image"
    content={socialMetaTags['og:image']}
  />
  <meta
    property="og:site_name"
    content={socialMetaTags['og:site_name']}
  />
  <meta
    property="og:type"
    content={socialMetaTags['og:type']}
  />
  {
    socialMetaTags['og:description'] && (
      <meta
        property="og:description"
        content={socialMetaTags['og:description']}
      />
    )
  }

  <!-- Twitter -->
  <meta
    name="twitter:card"
    content={socialMetaTags['twitter:card']}
  />
  <meta
    name="twitter:url"
    content={socialMetaTags['twitter:url']}
  />
  <meta
    name="twitter:title"
    content={socialMetaTags['twitter:title']}
  />
  <meta
    name="twitter:image"
    content={socialMetaTags['twitter:image']}
  />
  {
    socialMetaTags['twitter:description'] && (
      <meta
        name="twitter:description"
        content={socialMetaTags['twitter:description']}
      />
    )
  }

  <!-- Google JSON-LD Structured data (@graph) -->
  <script
    type="application/ld+json"
    is:inline
    set:html={JSON.stringify(structuredData)}
  />

  <!-- Theme color -->
  <meta
    name="theme-color"
    content={GLOBAL_CONFIG.themeColor}
  />

  <!-- Prefetch resume page for snappier nav -->
  <link
    rel="prefetch"
    href="/resume"
  />

  <!-- PostHog Analytics -->
  {IS_PROD && <PostHog />}

  <!-- View Transitions API -->
  <ClientRouter />
</head>
